name: Build Workflow

on:
  push:
#    branches: master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              python -m PyInstaller pokequiz/pokequiz.spec &&
              cd dist/ &&
              zip -r9 pokequiz pokequiz
            OUT_FILE_NAME: pokequiz.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
              python -m PyInstaller pokequiz/pokequiz.spec
            OUT_FILE_NAME: pokequiz.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.5'
          # architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r pokequiz/requirements.txt
          pip install pyinstaller
      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}
      # - name: Run PyInstaller
      #   run: |
      #     python -m PyInstaller pokequiz/pokequiz.spec
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.OUT_FILE_NAME}}
          path: dist/${{ matrix.OUT_FILE_NAME}}
      # - name: create release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     # tag_name: ${{ github.event.head_commit.message }}
      #     tag_name: v0.0.1
      #     # release_name: ${{ github.event.head_commit.message }}
      #     release_name: v0.0.1
      #     # overwrite: true
      #     body: |
      #       Test Release v0.0.1
      #     draft: false
      #     prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}