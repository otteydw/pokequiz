name: Build Workflow

on:
  push:
#    branches: master

jobs:
  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release ${{ github.ref_name }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              pyinstaller pokequiz/pokequiz.spec
            OUT_FILE_NAME: pokequiz-mac
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
              pyinstaller pokequiz/pokequiz.spec
            OUT_FILE_NAME: pokequiz-win.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.5'
          cache: 'pip'
      - name: Install requirements
        run: |
          pip install --upgrade pip
          pip install -r pokequiz/requirements.txt
          pip install pyinstaller
      - name: Lint with pyflakes
        run: |
          pip install pyflakes
          pyflakes .
      - name: Test with pytest
        run: |
          pip install pytest
          pytest
      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.OUT_FILE_NAME}}
          path: dist/${{ matrix.OUT_FILE_NAME}}

      # - name: Load Release URL File from release job
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: release_url
      # - name: Get Release File Name & Upload URL
      #   id: get_release_info
      #   shell: bash
      #   run: |
      #     value=`cat release_url/release_url.txt`
      #     echo ::set-output name=upload_url::$value
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.get_release_info.outputs.upload_url }}
      #     asset_path: dist/${{ matrix.OUT_FILE_NAME}}
      #     asset_name: ${{ matrix.OUT_FILE_NAME}}
      #     asset_content_type: ${{ matrix.ASSET_MIME}}
